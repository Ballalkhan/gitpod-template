{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "wasp",
  "scopeName": "source.wasp",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#type"
    },
    {
      "include": "#declVariable"
    },
    {
      "include": "#value"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.wasp",
          "match": "//.*$"
        },
        {
          "name": "comment.block.wasp",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "type": {
      "patterns": [
        {
          "name": "storage.type.wasp",
          "match": "\\b(action|app|entity|job|page|query|route)"
        }
      ]
    },
    "declVariable": {
      "patterns": [
        {
          "name": "entity.name.class.wasp",
          "match": "[a-zA-Z][0-9a-zA-Z]*"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "name": "variable.other.wasp",
          "match": "[a-zA-Z][0-9a-zA-Z]*"
        }
      ]
    },
    "value": {
      "patterns": [
        {
          "include": "#string"
        },
        {
          "include": "#number"
        },
        {
          "include": "#constant"
        },
        {
          "include": "#jsImport"
        },
        {
          "include": "#prismaClosure"
        },
        {
          "include": "#jsonClosure"
        },
        {
          "include": "#array"
        },
        {
          "include": "#dict"
        },
        {
          "include": "#variable"
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.wasp",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "number": {
      "name": "constant.numeric.wasp",
      "match": "-?\\d+(\\.\\d+)?"
    },
    "constant": {
      "patterns": [
        {
          "comment": "Booleans",
          "name": "constant.language.boolean.wasp",
          "match": "\\b(true|false)"
        },
        {
          "comment": "Enum values",
          "name": "constant.language.enum.wasp",
          "match": "\\b(EmailAndPassword|PostgreSQL|SQLite|Simple|PgBoss)"
        }
      ]
    },
    "jsImport": {
      "begin": "(?<!\\.)\\b(import)(?!\\s*:)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.jsImport.wasp"
        }
      },
      "end": "(?<=\".*\")",
      "name": "meta.jsImport.wasp",
      "patterns": [
        {
          "comment": "import { getList } from \"@ext/queries.js\" ^^^^^^",
          "match": "import",
          "name": "keyword.control.import.wasp"
        },
        {
          "comment": "import { getList } from \"@ext/queries.js\"\n                   ^^^^",
          "match": "from",
          "name": "keyword.control.from.wasp"
        },
        {
          "comment": "import { getList } from \"@ext/queries.js\"\n                        ^^^^^^^^^^^^^^^^^",
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.wasp",
          "patterns": [
            {
              "include": "#stringcontent"
            },
            {
              "comment": "import { getList } from \"@ext/queries.js\"\n                         ^^^^",
              "match": "@ext",
              "name": "support.constant.shortpath.wasp"
            }
          ]
        },
        {
          "comment": "import { getList } from \"@ext/queries.js\"\n       ^^^^^^^^^^^",
          "begin": "{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.modules.begin.wasp"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.modules.end.wasp"
            }
          },
          "contentName": "variable.other.jsImport.module.wasp"
        },
        {
          "comment": "import MainPage from \"@ext/MainPage.js\"\n       ^^^^^^^^",
          "match": "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b",
          "name": "variable.other.jsImport.module.wasp"
        }
      ]
    },
    "jsonClosure": {
      "name": "meta.embedded.block.json",
      "begin": "{=json",
      "end": "json=}",
      "patterns": [
        {
          "include": "source.json"
        }
      ]
    },
    "prismaClosure": {
      "name": "meta.embedded.block.prisma",
      "begin": "{=psl",
      "end": "psl=}",
      "patterns": [
        {
          "include": "source.prisma"
        }
      ]
    },
    "array": {
      "name": "meta.structure.array.wasp",
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.separator.array.begin.wasp"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.separator.array.end.wasp"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#value"
        },
        {
          "comment": "Comma separators in an array",
          "name": "punctuation.separator.array.wasp",
          "match": ","
        },
        {
          "comment": "Where a comma is a expected but something else was found",
          "name": "invalid.illegal.expected-array-separator.wasp",
          "match": "[^\\s\\]]"
        }
      ]
    },
    "dict": {
      "name": "meta.structure.dictionary.wasp",
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.separator.dictionary.begin.wasp"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.separator.dictionary.end.wasp"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#dictKey"
        },
        {
          "include": "#value"
        },
        {
          "comment": "Colons and commas in a dictionary",
          "begin": ":",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.dictionary.key-value.wasp"
            }
          },
          "end": "(,)|(?=\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.separator.dictionary.pair.wasp"
            }
          },
          "name": "meta.structure.dictionary.value.wasp",
          "patterns": [
            {
              "include": "#value"
            },
            {
              "comment": "Something unexpected",
              "name": "invalid.illegal.expected-dictionary-separator.wasp",
              "match": "[^\\s,]"
            }
          ]
        }
      ]
    },
    "dictKey": {
      "name": "meta.object-literal.key.wasp",
      "match": "[a-zA-Z]+(?=:)"
    },
    "stringcontent": {
      "patterns": [
        {
          "name": "constant.character.escape.wasp",
          "match": "\\\\."
        }
      ]
    }
  }
}
